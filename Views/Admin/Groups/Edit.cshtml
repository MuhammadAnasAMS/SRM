@model PIA_Admin_Dashboard.Models.Group
@{
    ViewBag.Title = "Edit Group";
    ViewBag.ScreenTitle = "Edit Group";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .department-section {
        width: 95%;
        margin: 30px auto;
        padding: 30px;
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
    }

    .group-info {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 25px;
        border-left: 4px solid #007bff;
    }

        .group-info h4 {
            margin: 0 0 10px 0;
            color: #495057;
        }

        .group-info .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }

    .info-item {
        display: flex;
        align-items: center;
    }

        .info-item strong {
            color: #343a40;
            margin-right: 8px;
        }

    .back-btn {
        background-color: #6c757d;
        color: white;
        padding: 10px 20px;
        text-decoration: none;
        border-radius: 6px;
        font-weight: 500;
        transition: background-color 0.3s ease;
        display: inline-block;
        margin-bottom: 20px;
    }

        .back-btn:hover {
            background-color: #5a6268;
            color: white;
            text-decoration: none;
        }

    .form-section {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        border-left: 4px solid #007bff;
    }

        .form-section h5 {
            margin: 0 0 20px 0;
            color: #495057;
            font-weight: 600;
        }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 8px;
            display: block;
        }

        .form-group .required {
            color: #dc3545;
        }

    .form-control, .form-select {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid #ced4da;
        border-radius: 6px;
        font-size: 14px;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        .form-control:focus, .form-select:focus {
            border-color: #80bdff;
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
        margin-bottom: 20px;
    }

    .btn-group {
        display: flex;
        gap: 12px;
        margin-top: 25px;
    }

    /* Base button styles */
    .btn {
        padding: 12px 24px;
        border-radius: 6px;
        font-weight: 500;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        min-width: 120px;
        height: 44px;
        font-size: 14px;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

        .btn-primary:hover {
            background-color: #007bff;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0, 123, 255, 0.3);
        }

    .btn-secondary {
        background-color: #dc3545;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #dc3545;
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(220, 53, 69, 0.3);
        }

    /* Focus states for accessibility */
    .btn:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
    }

    .btn-secondary:focus {
        box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.25);
    }

    /* Active states */
    .btn:active {
        transform: translateY(0px);
    }

    .member-count {
        background-color: #17a2b8;
        color: white;
        padding: 4px 12px;
        border-radius: 15px;
        font-size: 14px;
        font-weight: 600;
        margin-left: 10px;
    }

    .alert {
        padding: 12px 20px;
        margin-bottom: 20px;
        border-radius: 8px;
        font-weight: bold;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .text-danger {
        color: #dc3545;
        font-size: 12px;
        margin-top: 5px;
    }

    .text-muted {
        color: #6c757d !important;
    }

    @@media (max-width: 768px) {
        .form-row {
            grid-template-columns: 1fr;
        }
        
        .info-grid {
            grid-template-columns: 1fr !important;
        }
    }
</style>

<div class="card">
    <div class="card-header">@ViewBag.ScreenTitle</div>

    <a href="@Url.Action("Index", "Groups")" class="back-btn">
        <i class="fas fa-arrow-left"></i> Back to Groups
    </a>

    <!-- Error Messages -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    <!-- Group Information Display -->
    <div class="group-info">
        <h4>Current Group Information</h4>
        <div class="info-grid">
            <div class="info-item">
                <strong>Group Name:</strong> @Model.GroupName
                <span class="member-count">@Model.MemberCount Members</span>
            </div>
            <div class="info-item">
                <strong>Program:</strong>
                @if (Model.Program != null)
                {
                    @Model.Program.Name
                }
                else
                {
                    <span class="text-muted">Not Assigned</span>
                }
            </div>
            <div class="info-item">
                <strong>Manager:</strong>
                @if (!string.IsNullOrEmpty(Model.ManagerName))
                {
                    @Model.ManagerName <small class="text-muted">(@Model.ManagerPno)</small>
                }
                else
                {
                    <span class="text-muted">No Manager Assigned</span>
                }
            </div>
            <div class="info-item">
                <strong>Group ID:</strong> @Model.Gid
            </div>
        </div>
    </div>

    <!-- Edit Form -->
    <div class="form-section">
        <h5>Edit Group Details</h5>
        
        @using (Html.BeginForm("Edit", "Groups", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Gid)
            @Html.HiddenFor(model => model.Uid)

            <div class="form-group">
                <label for="GroupName">
                    Group Name <span class="required">*</span>
                </label>
                @Html.TextBoxFor(model => model.GroupName, new
                {
                    @class = "form-control",
                    placeholder = "Enter group name",
                    required = "required"
                })
                @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="ManagerPno">Select Manager</label>
                    @Html.DropDownListFor(model => model.ManagerPno,
                        (List<SelectListItem>)ViewBag.Agents,
                        "-- Select Manager --",
                        new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.ManagerPno, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label for="ProgramId">Select Program</label>
                    @Html.DropDownListFor(model => model.ProgramId,
                        (List<SelectListItem>)ViewBag.Programs,
                        "-- Select Program --",
                        new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.ProgramId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="btn-group">
                
                    <button type="submit" class="btn btn-primary"> Save</button>
                    <a href="@Url.Action("Index", "Groups")" class="btn btn-secondary"> Cancel</a>
                    
                
            </div>
        }
    </div>
</div>

<script>
    // Form validation
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        
        if (form) {
            form.addEventListener('submit', function(e) {
                const groupName = document.querySelector('#GroupName');
                
                if (groupName && !groupName.value.trim()) {
                    e.preventDefault();
                    alert('Please enter a group name.');
                    groupName.focus();
                    return false;
                }
            });
        }

        // Auto-hide error messages after 5 seconds
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(function(alert) {
            setTimeout(function() {
                alert.style.opacity = '0';
                alert.style.transition = 'opacity 0.5s ease';
                setTimeout(function() {
                    alert.style.display = 'none';
                }, 500);
            }, 5000);
        });

        console.log('Edit group page loaded');
    });
</script>